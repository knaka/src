#!/usr/bin/env sh
# vim: set filetype=sh tabstop=2 shiftwidth=2 expandtab :
# shellcheck shell=sh
set -o nounset -o errexit

export ARG0="$0"
export ARG0BASE="${0##*/}"
saved_pwd="$PWD"
dir="${0%/*}"
if test -z "$dir"
then
  dir="$PWD"
fi
cd "$dir" || exit 1
export PROJECT_DIR="$PWD"
script_file_path=
while :
do
  if test -r "$PWD"/"$ARG0BASE".sh
  then
    script_file_path="$PWD"/"$ARG0BASE".sh
    break
  fi
  if test -r "$PWD"/tasks/"$ARG0BASE".sh
  then
    script_file_path="$PWD"/tasks/"$ARG0BASE".sh
    break
  fi
  cd ..
  if test "$PWD" = "$dir"
  then
    # Reached the root directory without finding the script file.
    break
  fi 
done
if test -z "$script_file_path"
then
  echo "Cannot find script file for $ARG0" >&2
  exit 1
fi
export TASK_SH_DIR="$PWD"
cd "$saved_pwd" || exit 1
for SH in /bin/dash /bin/ash /bin/bash
do
  # Avoid using Dash on Debian because which is built with --disable-lineno option.
  if test "$SH" = /bin/dash && test -e /etc/debian_version
  then
    continue
  fi
  # Avoid using Bash on macOS because which is locked to version 3.* and buggy.
  if test "$SH" = "/bin/bash" && test -e /System/Library/CoreServices/SystemVersion.plist
  then
    continue
  fi
  if test -x "$SH"
  then
    export SH
    exec "$SH" "$script_file_path" "$@"
  fi
done
echo "No appropriate shell found." >&2
exit 1
